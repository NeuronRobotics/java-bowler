apply plugin: 'java'
apply plugin: 'eclipse'
	
sourceCompatibility = '1.7'
targetCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

Properties props = new Properties()
props.load(new FileInputStream("javasdk/NRSDK/src/com/neuronrobotics/sdk/config/build.properties"))

manifest {
    attributes(	
    			//"Main-Class": "com.dcx.epep.Start",
    			"Manifest-Version": "1.0",
    			"Created-By": "Neuron Robotics Cooperative",
    			"Specification-Title": props."app.name",
    			"Specification-Version": props."app.version",
    			"Specification-Vendor": "Neuron Robotics Cooperative",,
    			"Implementation-Title": props."app.name",
    			"Implementation-Version" : props."app.version",
    			"Implementation-Vendor": "Neuron Robotics Cooperative"
        		
    )
}

jar.archiveName = "nrsdk-"+props."app.version"+"-jar-with-dependencies.jar"

//apply from: 'http://gradle-plugins.mihosoft.eu/latest/vlicenseheader.gradle'
//repairHeaders.licenseHeaderText = new File(projectDir,'./license-template.txt')

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.0'
}

repositories {
    mavenCentral()
    maven {
        url "https://jcenter.bintray.com"
    }
}
sourceSets {
    main {
        java {
            srcDir 'javasdk/NRSDK/src/'
        }
        resources {
            srcDir 'javasdk/NRSDK/addons/'
        }
    }
}

	
dependencies {
    compile fileTree (dir: 'javasdk/NRSDK/lib/', includes: ['*.jar'])
    compile fileTree (dir: 'javasdk/NRSDK/lib_addons/', includes: ['*.jar'])
}


// create a fat-jar (class files plus dependencies
// excludes VRL.jar (plugin jar files must not start with 'vrl-\\d+')
jar {
	
    // dependencies except VRL
    from configurations.runtime.asFileTree.
        filter({file->return !file.name.startsWith("vrl-0")}).
        files.collect { zipTree(it) }

    // project class files compiled from source
    from files(sourceSets.main.output.classesDir)

}
