<project default="deploy" name="Neuron Robotics SDK" basedir=".">

	
  <property file="src/com/neuronrobotics/sdk/config/build.properties"/>
	<property name="ant.build.javac.source" value="1.7"/>
	<property name="ant.build.javac.target" value="1.7"/>
 
  <property name="app.path"      value="/${app.name}"/>
  <property name="build.home"    value="${basedir}/build"/>

  <property name="dist.home"     value="${basedir}/target"/>
  <property name="docs.home"     value="${basedir}/docs"/>
	
	<property name="libCore.home"      value="${basedir}/lib"/>
	<property name="srcCore.home"      value="${basedir}/src"/>
	
	<property name="libAddon.home"      value="${basedir}/lib_addons"/>
	<property name="srcAddon.home"      value="${basedir}/addons"/>
	
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
	
  <property name="jar.module" value="${app.name}-jar-with-dependencies.jar"/>
  <target name="clean"
   description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    
  </target>

  <target name="prepare" description="Create the file structure for assembly">
    <mkdir  dir="${build.home}"/>
  	
    <mkdir  dir="${build.home}/lib"/>
  	
    <copy  todir="${build.home}/lib">
    	<fileset dir="${basedir}/lib" includes="*"/>
    </copy>
  </target>

  <path id="compile.classpath">
    <fileset dir="${libCore.home}">
      <include name="*.jar"/>
    </fileset>  
  	<fileset dir="${libAddon.home}">
      <include name="*.jar"/>
    </fileset>  
  </path>
	
  <target name="compileCore" depends="prepare"
   description="Compile Java sources">
    <mkdir    dir="${build.home}"/>
    <javac srcdir="${srcCore.home}"
          destdir="${build.home}"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
    </javac>
  	
    <copy  todir="${build.home}">
      <fileset dir="${srcCore.home}" excludes="**/*.java"/>
    </copy>
  </target>
  <target name="distCore"
   description="Create binary distribution">
  	<mkdir dir="${dist.home}/docs/api"/>
    <tstamp>
      <format property="TODAY" pattern="yyyy-MM-dd" />
    </tstamp>
  	<jar jarfile="${dist.home}/external-libs-core.jar">
	  <zipgroupfileset dir="${libCore.home}">
	    <include name="**/*.jar"/>
	  </zipgroupfileset>
	</jar>
  	
    <jar jarfile="${dist.home}/${app.name}-${app.version}-core.jar">
      <manifest>
        <attribute name="Sealed" value="true"/>
      	<attribute name="Built-Date" value="${TODAY}"/> 
      </manifest>
      <fileset dir="build">
        <include name="**/*.class"/>
      	<include name="**/*.png"/>
      	<include name="**/*.xml"/>
      	<include name="**/*.properties"/>
        <exclude name="test/*.class"/>
      </fileset>
      <!--<zipgroupfileset dir="lib" includes="*.jar" />-->
    	<zipfileset src="${dist.home}/external-libs-core.jar">
	  	    <exclude name="META-INF/SUN_MICR.SF"/>
	  		<exclude name="META-INF/SUN_MICR.RSA"/>
    		<exclude name="**/*.so"/>
    		<exclude name="**/*.jnilib"/>
    		<exclude name="**/*.dll"/>
	  	</zipfileset>
    </jar>
  	</target>
  	
  	
    <target name="compileAddon" depends="clean,prepare"
     description="Compile Java sources">
      <mkdir    dir="${build.home}"/>
      <javac srcdir="${srcAddon.home}"
            destdir="${build.home}"
              debug="${compile.debug}"
        deprecation="${compile.deprecation}"
           optimize="${compile.optimize}">
          <classpath refid="compile.classpath"/>
      </javac>
    	
      <copy  todir="${build.home}">
        <fileset dir="${srcAddon.home}" excludes="**/*.java"/>
      </copy>
    </target>
  	
    <target name="distAddon"
     description="Create binary distribution">
    	<mkdir dir="${dist.home}/docs/api"/>
      <tstamp>
        <format property="TODAY" pattern="yyyy-MM-dd" />
      </tstamp>
    	<jar jarfile="${dist.home}/external-libs-addon.jar">
  	  <zipgroupfileset dir="${libAddon.home}">
  	    <include name="**/*.jar"/>
  	  </zipgroupfileset>
  	</jar>
      <jar jarfile="${dist.home}/${app.name}-${app.version}-jar-with-dependencies.jar">
        <manifest>
          <attribute name="Sealed" value="true"/>
        	<attribute name="Built-Date" value="${TODAY}"/> 
        </manifest>
        <fileset dir="build">
          <include name="**/*.class"/>
        	<include name="**/*.png"/>
        	<include name="**/*.xml"/>
        	<include name="**/*.properties"/>
          <exclude name="test/*.class"/>
        </fileset>
        <!--<zipgroupfileset dir="lib" includes="*.jar" />-->
      	<zipfileset src="${dist.home}/external-libs-addon.jar">
  	  	    <exclude name="META-INF/SUN_MICR.SF"/>
  	  		<exclude name="META-INF/SUN_MICR.RSA"/>
  	  	</zipfileset>
      	<zipfileset src="${dist.home}/external-libs-core.jar">
  	  	    <exclude name="META-INF/SUN_MICR.SF"/>
  	  		<exclude name="META-INF/SUN_MICR.RSA"/>
  	  	</zipfileset>
      </jar>
  	
    <copy todir="${dist.home}/lib">
      <fileset dir="${basedir}/native/" includes="**/*"/>
    </copy>
  </target>	
	
  <target name="javadoc" depends="compileCore,compileAddon"
   description="Create Javadoc API documentation">
    
    <javadoc sourcepath="${srcCore.home}" destdir="${dist.home}/docs/coreApi" packagenames="*" 
    	 splitindex="true" use="true" version="true">
      <classpath refid="compile.classpath"/> 
      <bottom><![CDATA[<script type="text/javascript" src="/googleanalytics.js"></script>]]></bottom>
   	</javadoc>
  	<javadoc sourcepath="${srcAddon.home}" destdir="${dist.home}/docs/addonApi" packagenames="*" 
    	splitindex="true" use="true" version="true">
      <classpath refid="compile.classpath"/> 
      <bottom><![CDATA[<script type="text/javascript" src="/googleanalytics.js"></script>]]></bottom>
   	</javadoc>
  </target>

  <target name="deploy" depends="clean, prepare, compileCore,distCore,compileAddon, distCore,distAddon"
   description="Builds the full deployment" />
</project>